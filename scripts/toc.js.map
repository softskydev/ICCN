{"version":3,"names":[],"mappings":"","sources":["toc.js"],"sourcesContent":["\r\nvar boxtoc =  document.querySelector(\".toc_sidebar\");\r\n\r\nif (typeof(boxtoc) != 'undefined' && boxtoc != null)\r\n{\r\n    class TableOfContents {\r\n        /*\r\n            The parameters from and to must be Element objects in the DOM.\r\n        */\r\n        constructor({ from, to }) {\r\n            this.fromElement = from;\r\n            this.toElement = to;\r\n            // Get all the ordered headings.\r\n            this.headingElements = this.fromElement.querySelectorAll(\"h1, h2, h3\");\r\n            this.tocElement = document.createElement(\"div\");\r\n        }\r\n\r\n        /*\r\n            Get the most important heading level.\r\n            For example if the article has only <h2>, <h3> and <h4> tags\r\n            this method will return 2.\r\n        */\r\n        getMostImportantHeadingLevel() {\r\n            let mostImportantHeadingLevel = 6; // <h6> heading level\r\n            for (let i = 0; i < this.headingElements.length; i++) {\r\n                let headingLevel = TableOfContents.getHeadingLevel(this.headingElements[i]);\r\n                mostImportantHeadingLevel = (headingLevel < mostImportantHeadingLevel) ?\r\n                    headingLevel : mostImportantHeadingLevel;\r\n            }\r\n            return mostImportantHeadingLevel;\r\n        }\r\n\r\n        /*\r\n            Generate a unique id string for the heading from its text content.\r\n        */\r\n        static generateId(headingElement) {\r\n            return headingElement.textContent.replace(/\\s+/g, \"_\").replace(/\\./g, \"\");\r\n        }\r\n\r\n        /*\r\n            Convert <h1> to 1 â€¦ <h6> to 6.\r\n        */\r\n        static getHeadingLevel(headingElement) {\r\n            switch (headingElement.tagName.toLowerCase()) {\r\n                case \"h1\": return 1;\r\n                case \"h2\": return 2;\r\n                case \"h3\": return 3;\r\n              //   case \"h4\": return 4;\r\n              //   case \"h5\": return 5;\r\n              //   case \"h6\": return 6;\r\n                default: return 1;\r\n            }\r\n        }\r\n\r\n        generateToc() {\r\n            let currentLevel = this.getMostImportantHeadingLevel() - 1,\r\n                currentElement = this.tocElement;\r\n\r\n            for (let i = 0; i < this.headingElements.length; i++) {\r\n                let headingElement = this.headingElements[i],\r\n                    headingLevel = TableOfContents.getHeadingLevel(headingElement),\r\n                    headingLevelDifference = headingLevel - currentLevel,\r\n                    linkElement = document.createElement(\"a\");\r\n                    linkElement.className = 'sub-item__link';\r\n                    // linkElement.setAttribute(\"onclick\", \"lnkSmthScroll()\");\r\n\r\n                if (!headingElement.id) {\r\n                    headingElement.id = TableOfContents.generateId(headingElement);\r\n                }\r\n                linkElement.href = `#${headingElement.id}`;\r\n                linkElement.textContent = headingElement.textContent;\r\n\r\n                if (headingLevelDifference > 0) {\r\n                    // Go down the DOM by adding list elements.\r\n                    for (let j = 0; j < headingLevelDifference; j++) {\r\n                        let listElement = document.createElement(\"ul\"),\r\n                            listItemElement = document.createElement(\"li\");\r\n                        listElement.appendChild(listItemElement);\r\n                        currentElement.appendChild(listElement);\r\n                        currentElement = listItemElement;\r\n                    }\r\n                    currentElement.appendChild(linkElement);\r\n                } else {\r\n                    // Go up the DOM.\r\n                    for (let j = 0; j < -headingLevelDifference; j++) {\r\n                        currentElement = currentElement.parentNode.parentNode;\r\n                    }\r\n                    let listItemElement = document.createElement(\"li\");\r\n                    listItemElement.appendChild(linkElement);\r\n                    currentElement.parentNode.appendChild(listItemElement);\r\n                    currentElement = listItemElement;\r\n                }\r\n\r\n                currentLevel = headingLevel;\r\n            }\r\n\r\n            this.toElement.appendChild(this.tocElement.firstChild);\r\n        }\r\n      }\r\n\r\n\r\n      document.addEventListener(\"DOMContentLoaded\", () =>\r\n          new TableOfContents({\r\n              from: document.querySelector(\".single-article_content\"),\r\n              to: document.querySelector(\".toc_sidebar\")\r\n          }).generateToc()\r\n      );\r\n}\r\n\r\n\r\n\r\n"],"file":"toc.js"}