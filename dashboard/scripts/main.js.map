{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["$(function () {\r\n  'use strict';\r\n  function toSvg(obj) {\r\n    var $img = obj;\r\n    var imgID = $img.attr('id');\r\n    var imgClass = $img.attr('class');\r\n    var imgURL = $img.attr('src');\r\n\r\n    jQuery.get(imgURL, function (data) {\r\n      var $svg = jQuery(data).find('svg');\r\n      if (typeof imgID !== 'undefined') {\r\n        $svg = $svg.attr('id', imgID);\r\n      }\r\n      if (typeof imgClass !== 'undefined') {\r\n        $svg = $svg.attr('class', imgClass + ' replaced-svg');\r\n      }\r\n      $svg = $svg.removeAttr('xmlns:a');\r\n      $img.replaceWith($svg);\r\n    }, 'xml');\r\n  }\r\n\r\n  function init() {\r\n    jQuery('img.svg').each(function (i) {\r\n      toSvg($(this));\r\n    });\r\n\r\n    jQuery('.select').each(function () {\r\n      var select = jQuery(this),\r\n        size = (select.data('size') !== undefined) ? select.data('size') : 4;\r\n\r\n      select.selectpicker({\r\n        style: 'select-control',\r\n        size: size,\r\n        liveSearchPlaceholder: 'Search here..',\r\n        width: \"100%\",\r\n      });\r\n    });\r\n\r\n    jQuery('.date').each(function () {\r\n      var date = jQuery(this),\r\n        input = date.find('input');\r\n      input.datepicker();\r\n    });\r\n\r\n    $('.input-autosize').each(function () {\r\n      autosize($(this));\r\n    })\r\n\r\n    setTimeout(func, 200);\r\n\r\n    $(\"#wrap\").addClass(\"load-page\");\r\n  } init();\r\n\r\n  function func() {\r\n\r\n    $('.sidebar').each(function () {\r\n      var $t = $(this),\r\n        $toggle = $t.find('.sidebar__toggle');\r\n\r\n      $toggle.on('click', function () {\r\n        $t.toggleClass('open');\r\n      });\r\n    });\r\n\r\n    $('.has-word-count').each(function () {\r\n      var $t = $(this),\r\n        $input = $t.find('.hwc-input'),\r\n        $counter = $t.find('.hwc-counter'),\r\n        $max = $counter.data('max');\r\n\r\n      $counter.text('-' + $max);\r\n\r\n      $input.on('keyup', function (e) {\r\n        var $el = $(this),\r\n          $words = $el.val().length;\r\n\r\n        if (parseInt($words) < parseInt($max)) {\r\n          $counter.text('-' + ($max - $words));\r\n          console.log('w: ' + $words + ', m:' + $max);\r\n        } else {\r\n          $counter.text('0');\r\n          console.log('a')\r\n        }\r\n      });\r\n    });\r\n\r\n    $('.content__tabs').each(function () {\r\n      var $t = $(this),\r\n        $nav = $t.find('.nav-tabs'),\r\n        $content = $t.find('.tab-content'),\r\n        $pane = $t.find('.tab-pane'),\r\n        $next = $t.find('.btn-next'),\r\n        $back = $t.find('.btn-back');\r\n\r\n      $next.each(function () {\r\n        var $el = $(this),\r\n          $target = $el.attr('href');\r\n\r\n        $el.on('click', function () {\r\n          $nav.find('.nav-link').removeClass('active');\r\n          $nav.find('.nav-link[href=\"' + $target + '\"]').addClass('active');\r\n          $pane.removeClass('active');\r\n          $($target).addClass('active');\r\n        });\r\n      })\r\n\r\n      $back.each(function () {\r\n        var $el = $(this),\r\n          $target = $el.attr('href');\r\n\r\n        $el.on('click', function () {\r\n          $nav.find('.nav-link').removeClass('active');\r\n          $nav.find('.nav-link[href=\"' + $target + '\"]').addClass('active');\r\n          $pane.removeClass('active');\r\n          $($target).addClass('active');\r\n        });\r\n      })\r\n    });\r\n\r\n    $('.content__cart').each(function(){\r\n      // Ketika checkbox dengan ID \"chkall\" diubah statusnya\r\n      $(\"#chkall\").change(function() {\r\n        // Ambil status terbaru dari checkbox \"chkall\"\r\n        var isCheckedAll = $(this).prop(\"checked\");\r\n\r\n        // Cari dan perbarui status semua checkbox lain dengan ID \"chk1\" sampai \"chkn\"\r\n        $(\"[id^='chk']\").prop(\"checked\", isCheckedAll);\r\n      });\r\n\r\n      // Ketika checkbox dengan ID \"chk1\" sampai \"chkn\" diubah statusnya\r\n      $(\"[id^='chk']\").change(function() {\r\n        // Periksa apakah ada checkbox yang tidak dicentang (tidak berurutan)\r\n        var isAllChecked = true;\r\n        $(\"[id^='chk']\").each(function() {\r\n          if (!$(this).prop(\"checked\")) {\r\n            isAllChecked = false;\r\n            return false; // Berhenti dari loop jika ditemukan checkbox tidak dicentang\r\n          }\r\n        });\r\n\r\n        // Perbarui status checkbox \"chkall\" berdasarkan hasil pengecekan di atas\r\n        $(\"#chkall\").prop(\"checked\", isAllChecked);\r\n      });\r\n    });\r\n\r\n  };\r\n});"],"file":"main.js"}